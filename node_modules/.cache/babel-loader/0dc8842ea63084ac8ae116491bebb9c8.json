{"ast":null,"code":"import { createStore } from 'redux';\nimport { createSlice, configureStore } from '@reduxjs/toolkit'; // NOTE: WE CAN REDUCE CODE FROM THIS FILE TO counterSlice.JS AND authSlice.JS.\n// const initialCounterState = { counter: 0, showCounter: true };\n// const initialAuthState = { isAuthenticated: false };\n// const counterSlice = createSlice({\n//     name: 'counter',\n//     initialState: initialCounterState,\n//     reducers: {\n//         increment(state) {\n//             state.counter++;\n//         },\n//         decrement(state) {\n//             state.counter--;\n//         },\n//         increase(state, action) {\n//             state.counter = state.counter + action.payload;\n//         },\n//         toggleCounter(state) {\n//             state.showCounter = !state.showCounter;\n//         },\n//     }\n// });\n// const authSlice = createSlice({\n//     name: 'authentication',\n//     initialState: initialAuthState,\n//     reducers: {\n//         login(state) {\n//             state.isAuthenticated = true;\n//         },\n//         logout(state) {\n//             state.isAuthenticated = false;\n//         }\n//     }\n// });\n//NOTE: WE CAN USE CREATESLICE FUNCTION FOR REDUCE IF CONDITIONS.\n// const counterFunction = (state = initialstate, action) => {\n//     if (action.type === 'increment') {\n//         return {\n//             counter: state.counter + 1,\n//             showCounter: state.showCounter\n//         };\n//     }\n//     if (action.type === 'increase') {\n//         return {\n//             counter: state.counter + action.amount,\n//             showCounter: state.showCounter\n//         };\n//     }\n//     if (action.type === 'decrement') {\n//         return {\n//             counter: state.counter - 1,\n//             showCounter: state.showCounter\n//         };\n//     }\n//     if (action.type === 'toggle') {\n//         return {\n//             counter: state.counter + 1,\n//             showCounter: !state.showCounter\n//         };\n//     }\n//     return state;\n// };\n\nconst store = configureStore({\n  reducer: {\n    counter: counterSlice.reducer,\n    auth: authSlice.reducer\n  }\n});\nexport const counterActions = counterSlice.actions;\nexport const authActions = authSlice.actions;\nexport default store;","map":{"version":3,"sources":["D:/ReactCourseByChandani/ReduxDemo/src/store/index.js"],"names":["createStore","createSlice","configureStore","store","reducer","counter","counterSlice","auth","authSlice","counterActions","actions","authActions"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;AACA,SAASC,WAAT,EAAsBC,cAAtB,QAA4C,kBAA5C,C,CAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,KAAK,GAAGD,cAAc,CAAC;AACzBE,EAAAA,OAAO,EAAE;AAAEC,IAAAA,OAAO,EAAEC,YAAY,CAACF,OAAxB;AAAgCG,IAAAA,IAAI,EAACC,SAAS,CAACJ;AAA/C;AADgB,CAAD,CAA5B;AAGA,OAAO,MAAMK,cAAc,GAAGH,YAAY,CAACI,OAApC;AACP,OAAO,MAAMC,WAAW,GAAGH,SAAS,CAACE,OAA9B;AAEP,eAAeP,KAAf","sourcesContent":["import { createStore } from 'redux';\r\nimport { createSlice, configureStore } from '@reduxjs/toolkit'\r\n\r\n// NOTE: WE CAN REDUCE CODE FROM THIS FILE TO counterSlice.JS AND authSlice.JS.\r\n// const initialCounterState = { counter: 0, showCounter: true };\r\n// const initialAuthState = { isAuthenticated: false };\r\n\r\n// const counterSlice = createSlice({\r\n//     name: 'counter',\r\n//     initialState: initialCounterState,\r\n//     reducers: {\r\n//         increment(state) {\r\n//             state.counter++;\r\n//         },\r\n//         decrement(state) {\r\n//             state.counter--;\r\n//         },\r\n//         increase(state, action) {\r\n\r\n//             state.counter = state.counter + action.payload;\r\n//         },\r\n//         toggleCounter(state) {\r\n//             state.showCounter = !state.showCounter;\r\n//         },\r\n\r\n//     }\r\n\r\n// });\r\n// const authSlice = createSlice({\r\n//     name: 'authentication',\r\n//     initialState: initialAuthState,\r\n//     reducers: {\r\n//         login(state) {\r\n//             state.isAuthenticated = true;\r\n//         },\r\n//         logout(state) {\r\n//             state.isAuthenticated = false;\r\n//         }\r\n//     }\r\n\r\n// });\r\n\r\n//NOTE: WE CAN USE CREATESLICE FUNCTION FOR REDUCE IF CONDITIONS.\r\n// const counterFunction = (state = initialstate, action) => {\r\n//     if (action.type === 'increment') {\r\n//         return {\r\n//             counter: state.counter + 1,\r\n//             showCounter: state.showCounter\r\n//         };\r\n//     }\r\n//     if (action.type === 'increase') {\r\n//         return {\r\n//             counter: state.counter + action.amount,\r\n//             showCounter: state.showCounter\r\n//         };\r\n//     }\r\n//     if (action.type === 'decrement') {\r\n//         return {\r\n//             counter: state.counter - 1,\r\n//             showCounter: state.showCounter\r\n//         };\r\n//     }\r\n//     if (action.type === 'toggle') {\r\n//         return {\r\n//             counter: state.counter + 1,\r\n//             showCounter: !state.showCounter\r\n//         };\r\n//     }\r\n//     return state;\r\n// };\r\n\r\nconst store = configureStore({\r\n    reducer: { counter: counterSlice.reducer,auth:authSlice.reducer }\r\n});\r\nexport const counterActions = counterSlice.actions;\r\nexport const authActions = authSlice.actions;\r\n\r\nexport default store;"]},"metadata":{},"sourceType":"module"}